use ("TurismoDB");

// Retorna os 5 pontos turísticos mais visitados em ordem decrescente
db.PontosTuristicos.find().sort({qtdvisitante: -1}).limit(5);


// Retorna a quantidade média de visitantes por cidade
db.PontosTuristicos.aggregate([
    {
        $group: {
            _id: {cidade: "$cidade"},
            media: {$avg: "$qtdvisitante"}
        }
    }
]);

// Retorna o nome, a cidade e o estado dos pontos turísticos localizados no nordeste
db.PontosTuristicos.aggregate([
    {
        $match: {
            $or: [
                {estado: "Alagoas"},
                {estado: "Bahia"},
                {estado: "Ceará"},
                {estado: "Pernambuco"}
            ]
        }
    },
    {
        $project: {
            _id: 0,
            nome: 1,
            cidade: 1,
            estado: 1
        }
    }
]);

// Retorna as cidades que possuem hotéis com classificação a partir de 4 estrelas
db.Hoteis.distinct("cidade", {classificacao: {$gte: 4}});

// Retorna quantos hotéis possuem piscina
db.Hoteis.count({comodidades: "piscina"});

// Retorna a quantidade total de quartos em todos os hotéis
db.Hoteis.aggregate([
    {
        $group: {
            _id: null,
            total: {$sum: "$qtd_quartos"}
        }
    }
]);

// Retorna o tipo e a quantidade de estações todos os pacotes que possuem a quantidade máxima de estações
db.Pacotes.aggregate([
    {
        $project: {
            _id: 0,
            tipo: 1,
            estacao_count: {$size: "$estacao"}
        }
    },
    {
        $group: {
            _id: null,
            max_estacao_count: {$max: "$estacao_count"}
        }
    },
    {
        $lookup: {
            from: "Pacotes",
            let: {max_estacao_count: "$max_estacao_count"},
            pipeline: [
                {
                    $project: {
                        _id: 0,
                        tipo: 1,
                        estacao_count: {$size: "$estacao"}
                    }
                },
                {
                    $match: {
                    $expr: {$eq: ["$estacao_count", "$$max_estacao_count"]}
                    }
                }
            ],
            as: "pacotes"
        }
    },
    {
        $unwind: "$pacotes"
    },
    {
        $replaceRoot: {newRoot: "$pacotes"}
    }
]);

// Retorna os turistas que nasceram a partir de 1990
db.Turistas.find({
    $where: function() {
        return this.data_nascimento.getFullYear() >= 1990;
    }
});
// Retorna os turistas que nasceram a partir de 1990 - com pretty (testar)
/*db.Turistas.find({
    $where: function() {
        return this.data_nascimento.getFullYear() >= 1990;
    }
}).pretty();*/

//Consulta para encontrar as hospedagens feitas por um turista com um CPF específico:
db.Hospedagens.find({"turista.CPF": "79879898576"}, {"turista": 0})

//Consulta para encontrar as hospedagens feitas em um hotel com um nome específico:
db.Hospedagens.find({"hotel.nome": "Hotel E"}, {"hotel": 0})

//Consulta para encontrar as hospedagens feitas em um determinado período:
db.Hospedagens.find({
    "data_checkin": {"$gte": new Date("2022-09-22")},
    "data_checkout": {"$lte": new Date("2023-01-01")},
    "hotel.nome": "Hotel A"
})

//Consulta para encontrar as hospedagens que foram pagas antecipadamente:
db.Hospedagens.find({"pagamento_antecipado": true})

//Consulta para encontrar as hospedagens que duraram mais de uma semana:
db.Hospedagens.find({
    $expr: {
        $gt: [{$divide: [{$subtract: ["$data_checkout", "$data_checkin"]}, 1000*60*60*24*7]}, 1]
    }
})
//Consulta para encontrar todos os hoteis que possuem spa e academia
db.Hoteis.find({comodidades: {$all:["spa","academia"]}});

//Adiciona 'academia' no array de comodidades do Hotel D
db.Hoteis.updateOne(
    { _id : ObjectId("6447e63b2a9711157c90f095")},
    {$addToSet: {"comodidades": "academia"}}
 );

// Atualiza a situação do pagamento de uma hospedagem especifica
db.Hospedagens.update(
    { _id : ObjectId('6447e63b2a9711157c90f0ad')},
    {$set: { "pagamento_antecipado": true}}
);

//Consulta que procura por texto em todo o DB
db.PontosTuristicos.createIndex({ nome: 'text' })
db.PontosTuristicos.find({$text: {$search: "Pão"}});

//Renomeia a coleção 
db.PacotePasseios.renameCollection("PacotesPasseios");
